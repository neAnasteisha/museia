@using System.Security.Claims
@model List<Post>

@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - museia</title>
    <link rel="stylesheet" href="~/css/post.css" />
</head>
<body>

    <form method="get" asp-action="Index" class="m-3">
        <input type="text" name="searchText" class="form-control" placeholder="Пошук" style="width: 300px;" />
    </form>

    <div class="posts m-3">
        <h3>All Posts</h3>

        @if (Model.Count != 0)
        {
            foreach (var post in Model)
            {
                <div class="post mb-4 p-3 border rounded">
                    <div class="post-content">
                        <h4>@post.PostText</h4>
                        <p><strong>#</strong> @post.PostTag</p>
                        <p><strong>Дата публікації:</strong> @post.CreatedAt.ToString("yyyy-MM-dd")</p>
                    </div>

                    @if (!string.IsNullOrEmpty(post.PostPhoto))
                    {
                        <div class="post-image">
                            <img src="@post.PostPhoto" alt="Фото допису" style="max-width: 300px; max-height: 300px; border-radius: 10px;" />
                        </div>
                    }

                    <div class="post-reactions">
                        @if (post.Reactions != null && post.Reactions.Count > 0)
                        {
                            <ul>
                                @foreach (var reactionGroup in post.Reactions.GroupBy(r => r.ReactionType))
                                {
                                    <li>@GetEmoji(reactionGroup.Key) @reactionGroup.Count()</li>
                                }
                            </ul>
                        }
                    </div>

                    <div class="post-actions">
                       @*  <a href="@Url.Action("Edit", "Post", new { id = post.PostID })" class="btn btn-edit-post">Редагувати</a>

                        <form method="post" action="@Url.Action("Delete", "Post", new { id = post.PostID })">
                            <button type="submit" class="btn btn-delete-post" onclick="return confirm('Ви впевнені, що хочете видалити цей допис?')">Видалити</button>
                        </form> *@

                        @if (User.Identity.IsAuthenticated)
                        {
                            <a href="@Url.Action("Report", "Complaint", new { postId = post.PostID })" class="btn btn-complaint-post">Поскаржитись</a>

                            var userReaction = post?.Reactions?.FirstOrDefault(r => r.UserID == User.FindFirstValue(ClaimTypes.NameIdentifier));
                            var reactionLabel = userReaction != null ? GetEmoji(userReaction.ReactionType) : "Реагувати";

                            <a href="@Url.Action("AddReaction", "Reaction", new { postId = post?.PostID })" class="btn btn-reaction-post">
                                @reactionLabel (@post?.Reactions?.Count)
                            </a>

                        }
                    </div>
                </div>
            }
        }
        else
        {
            <div>
                <h4>Нічого не вдалось знайти :(</h4>
            </div>
        }
    </div>

</body>
</html>

@functions {
    private string GetEmoji(Emoji reactionType)
    {
        return reactionType switch
        {
            Emoji.Heart => "❤️",
            Emoji.ThumbsUp => "👍",
            Emoji.Cry => "😢",
            Emoji.Dragon => "🐉",
            Emoji.Laughing => "😹",
            Emoji.Throwing_Up => "🤮",
            Emoji.Sparkle => "✨",
            _ => string.Empty,
        };
    }
}
