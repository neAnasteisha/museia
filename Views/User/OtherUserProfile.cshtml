@using System.Security.Claims
@using System.Linq
@model museia.Models.ProfileViewModel

@inject museia.Services.CurrentUserService CurrentUserService

@{
    ViewData["Title"] = "Профіль " + Model.User.UserName;
    var currentUserId = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
    var userAvatar = string.IsNullOrEmpty(Model.User.UserAvatar)
        ? "/uploads/avatar.jpg"
        : Model.User.UserAvatar;
    var userType = await CurrentUserService.GetCurrentUserTypeAsync();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - museia</title>
    <link rel="stylesheet" href="~/css/post.css" />
</head>
<body>
    <!-- Шапка чужого профілю -->
    <div class="profile-header" style="text-align:center; margin-bottom:5vw;">
        <img src="@userAvatar" alt="Avatar" style="width:150px; height:150px; border-radius:50%; margin-bottom:10px;" />
        <h1>@Model.User.UserName</h1>
        @if (!string.IsNullOrEmpty(Model.User.UserDescription))
        {
            <p style="margin-top:16px;"><strong>Опис:</strong> @Model.User.UserDescription</p>
        }
    </div>

    <!-- Список дописів користувача -->
    <div style="width:70vw; margin:0 auto;">
        <div id="postsContainer">
            @await Html.PartialAsync("~/Views/Post/_PostsPartial.cshtml", Model.UserPosts)
        </div>
    </div>

    <script>
        // Для простого перезавантаження сторінки після додавання реакції
        function attachReactionHandlers() {
            document.querySelectorAll('.reaction-form').forEach(form => {
                form.addEventListener('submit', async e => {
                    e.preventDefault();
                    const postId = form.querySelector('input[name="postId"]').value;
                    const reactionType = e.submitter.value;
                    const token = form.querySelector('input[name="__RequestVerificationToken"]')?.value;

                    const fd = new FormData();
                    fd.append('postId', postId);
                    fd.append('reactionType', reactionType);
                    if (token) fd.append('__RequestVerificationToken', token);

                    try {
                        const res = await fetch(form.action, {
                            method: 'POST',
                            headers: { 'X-Requested-With': 'XMLHttpRequest' },
                            body: fd
                        });
                        if (res.ok) {
                            // Повне перезавантаження сторінки
                            window.location.reload();
                        } else {
                            form.submit();
                        }
                    } catch {
                        form.submit();
                    }
                });
            });
        }

        // Стартова ініціалізація обробників
        document.addEventListener('DOMContentLoaded', attachReactionHandlers);
    </script>

    <style>
        .reaction-count.my-reaction {
            background-color: #a3cde1;
            color: black;
        }

        .reaction-count {
            background-color: #c9e2f5;
            color: black;
        }
    </style>
</body>
</html>

@functions {
    private string GetEmoji(Emoji reactionType) => reactionType switch
    {
        Emoji.Heart => "❤️",
        Emoji.ThumbsUp => "👍",
        Emoji.Cry => "😢",
        Emoji.Dragon => "🐉",
        Emoji.Laughing => "😹",
        Emoji.Throwing_Up => "🤮",
        Emoji.Sparkle => "✨",
        _ => string.Empty
    };
}