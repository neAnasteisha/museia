@using System.Security.Claims
@model museia.Models.ProfileViewModel

@{
    ViewData["Title"] = "Профіль";
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    // Якщо аватар відсутній, використовується зображення за замовчуванням
    var userAvatar = string.IsNullOrEmpty(Model.User.UserAvatar) ? "/uploads/avatar.jpg" : Model.User.UserAvatar;
}

<!DOCTYPE html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - museia</title>
    <link rel="stylesheet" href="~/css/profile.css"/>
    <link rel="stylesheet" href="~/css/post.css"/>
</head>
<body>

    <div class="profile-header">
        @* h2 style="margin-left:35px; padding-top:20px;">@ViewData["Title"]</h2> *@

        <div>
            <h3 class="profile-username"></strong> @Model.User.UserName</h3>
            <img src="@userAvatar" alt="Profile Photo" style="width: 125px; height: 125px; border-radius: 50%; margin-top: -35px; margin-left:50px; " />
            <p class="profile-email"><strong>Email:</strong> @Model.User.Email</p>
            @if (!string.IsNullOrEmpty(Model.User.UserDescription))
            {
                <p style="padding-left: 200px; margin-top:-20px;"><strong>Опис:</strong> @Model.User.UserDescription</p>
            }

        </div>
    </div>
    

    <div class="profile-post">
        <h3 class="post-user">Дописи </h3>
        @if (Model.UserPosts.Count > 0)
        {
            <ul>
                @foreach (var post in Model.UserPosts)
                {
                    <div class="post mb-4 p-3 border rounded">
                        <div class="post-content">
                            <h4>@post.PostText</h4>
                            <p><strong>#</strong> @post.PostTag</p>
                            <p><strong>Дата публікації:</strong> @post.CreatedAt.ToString("yyyy-MM-dd")</p>
                        </div>

                        @if (!string.IsNullOrEmpty(post.PostPhoto))
                        {
                            <div class="post-image">
                                <img src="@post.PostPhoto" alt="Фото допису" style="max-width: 300px; max-height: 300px; border-radius: 10px;" />
                            </div>
                        }

                        <div class="post-reactions">
                            @if (post.Reactions != null && post.Reactions.Count > 0)
                            {
                                <ul>
                                    @foreach (var reactionGroup in post.Reactions.GroupBy(r => r.ReactionType))
                                    {
                                        <li>@GetEmoji(reactionGroup.Key) @reactionGroup.Count()</li>
                                    }
                                </ul>
                            }
                        </div>

                        <div class="post-actions">
                            @if (User.Identity.IsAuthenticated && post.UserID == currentUserId)
                            {
                                <a href="@Url.Action("EditPost", "Post", new { id = post.PostID })" class="btn btn-edit-post">Редагувати</a>

                                <form method="post" action="@Url.Action("DeletePost", "Post", new { id = post.PostID })">
                                    <button type="submit" class="btn btn-delete-post" onclick="return confirm('Ви впевнені, що хочете видалити цей допис?')">Видалити</button>
                                </form>
                            }
                        </div>
                    </div>
                }
            </ul>
        }
        else
        {
            <p style="margin-left:35px;">Пости не знайдено.</p>
        }
    </div>
</body>
</html>




@functions {
    private string GetEmoji(Emoji reactionType)
    {
        return reactionType switch
        {
            Emoji.Heart => "❤️",
            Emoji.ThumbsUp => "👍",
            Emoji.Cry => "😢",
            Emoji.Dragon => "🐉",
            Emoji.Laughing => "😹",
            Emoji.Throwing_Up => "🤮",
            Emoji.Sparkle => "✨",
            _ => string.Empty,
        };
    }
}
