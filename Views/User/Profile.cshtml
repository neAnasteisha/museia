@using System.Security.Claims
@model museia.Models.ProfileViewModel

@{
    ViewData["Title"] = "Профіль";
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    // Якщо аватар відсутній, використовується зображення за замовчуванням
    var userAvatar = string.IsNullOrEmpty(Model.User.UserAvatar) ? "/uploads/avatar.jpg" : Model.User.UserAvatar;
}

<!DOCTYPE html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - museia</title>
    <link rel="stylesheet" href="~/css/profile.css" />
    <link rel="stylesheet" href="~/css/post.css" />
</head>
<body>

    <div class="profile-header" style="margin-left: 5.5vw;">
        <div>
            <h3 class="profile-username" style="padding-left:16vw;">@Model.User.UserName</h3>
            <img src="@userAvatar" alt="Profile Photo" style="width: 10vw; height: 10vw; border-radius: 50%; margin-top: -35px; margin-left:50px;" />
            <p class="profile-email" style="padding-left:16vw;"><strong>Email:</strong> @Model.User.Email</p>
            @if (!string.IsNullOrEmpty(Model.User.UserDescription))
            {
                <p style="padding-left:16vw; margin-top:-20px;"><strong>Опис:</strong> @Model.User.UserDescription</p>
            }
        </div>
    </div>

    <div class="profile-post">
        @if (Model.UserPosts.Count > 0 && Model.UserPosts.Any(post => !post.IsHidden))
        {
            <h3 class="" style="margin-left: 5.5vw;">Дописи</h3>
            <div class="posts m-3" style="display:flex; align-items: center; flex-direction: column;">
                @foreach (var post in Model.UserPosts.OrderByDescending(p => p.CreatedAt))
                {
                    @if (!post.IsHidden)
                    {
                        <div class="post mb-4 p-3 border" style="height: fit-content; width: 70vw; border-radius: 1vw; padding: 2vw;">
                            <div class=" mb-2" style="display:flex; flex-direction: row; gap: 2vw; align-items: flex-start; justify-content: flex-start;">
                                @if (!string.IsNullOrEmpty(post.PostPhoto))
                                {
                                    <div class="post-image">
                                        <img src="@post.PostPhoto" alt="Фото допису" style="width: auto; height: 21vw;" />
                                    </div>
                                }
                                <div style="display: flex; flex-direction: column; gap: 2vw; height: fit-content; max-height: 20vw;">
                                    <!-- Оскільки це профіль користувача, відображається його ім'я без посилання -->
                                    <a class="nickname" style="color: black;">@Model.User.UserName</a>
                                    <div class="post-content">
                                        <h4 class="post-text">@post.PostText</h4>
                                        <div class="post-meta">
                                            <span class="post-tag"><strong>#</strong> @post.PostTag</span>
                                            <span class="post-date">@post.CreatedAt.ToString("yyyy.MM.dd")</span>
                                        </div>
                                    </div>
                                    @if (post.Reactions != null && post.Reactions.Count > 0)
                                    {
                                        <div class="post-reactions">
                                            <ul style="display: flex; flex-direction: row; gap: 0.5vw;">
                                                @foreach (var reactionGroup in post.Reactions.GroupBy(r => r.ReactionType))
                                                {
                                                    <li style="list-style: none; padding: 0; margin: 0;">@GetEmoji(reactionGroup.Key) @reactionGroup.Count()</li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                    <div class="post-actions">
                                        @if (User.Identity.IsAuthenticated && post.UserID == currentUserId)
                                        {
                                            <a href="@Url.Action("EditPost", "Post", new { id = post.PostID })" class="btn btn-edit-post post-actions-btn">Редагувати</a>
                                            <form method="post" action="@Url.Action("DeletePost", "Post", new { id = post.PostID })" style="display:inline;">
                                                <button type="submit" class="btn btn-delete-post post-actions-btn" onclick="return confirm('Ви впевнені, що хочете видалити цей допис?')">Видалити</button>
                                            </form>
                                        }
                                    </div>
                                    @if (post.EditedAt.HasValue)
                                    {
                                        <p class="text-muted" style="font-size: 0.8em; margin-top: 0.5em;">
                                            Відредаговано @post.EditedAt.Value.ToString("dd.MM.yyyy HH:mm")
                                        </p>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        }
        else
        {
            <div>
                <h4>Нічого не вдалось знайти :(</h4>
            </div>
        }
    </div>
</body>

@functions {
    private string GetEmoji(Emoji reactionType)
    {
        return reactionType switch
        {
            Emoji.Heart => "❤️",
            Emoji.ThumbsUp => "👍",
            Emoji.Cry => "😢",
            Emoji.Dragon => "🐉",
            Emoji.Laughing => "😹",
            Emoji.Throwing_Up => "🤮",
            Emoji.Sparkle => "✨",
            _ => string.Empty,
        };
    }
}
